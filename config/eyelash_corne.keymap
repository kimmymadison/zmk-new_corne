#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        shiftcaps_sticky_td: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        parenth_td: parenth_td {
            compatible = "zmk,behavior-tap-dance";
            label = "PARENTH_TD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        cut_copy: cut_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "CUT_COPY";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
        };

        shiftlayer_td: shiftlayer_td {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTLAYER_TD";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&shiftlayer>;
        };

        quote_td: quote_td {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_TD";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp LS(APOS)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &alt_f4>;

            label = "ALT_F4";
        };

        ctrl_alt_delete: ctrl_alt_delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_CONTROL &kp LEFT_ALT &kp DEL>;

            label = "CTRL_ALT_DELETE";
        };

        shiftlayer: shiftlayer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&sl 1 &sk LEFT_SHIFT>;

            label = "SHIFTLAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&gresc            &kp Q  &kp W  &kp E  &kp R           &kp T                                           &kp UP                &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp TAB           &kp A  &kp S  &kp D  &kp F           &kp G                                 &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J      &kp K      &kp L    &kp SEMI  &quote_td
&sk LEFT_CONTROL  &kp Z  &kp X  &kp C  &kp V           &mt LALT B            &kp LEFT_GUI              &kp DOWN              &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp DELETE
                                &sl 2  &shiftlayer_td  &shiftcaps_sticky_td                                                  &kp ENTER  &kp SPACE  &sl 1
            >;

            sensor-bindings = <&inc_dec_kp LC(C_AC_ZOOM_IN) C_AC_ZOOM_OUT>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &trans     &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                                &kp PG_UP               &trans      &kp N7        &kp N8        &kp N9        &trans         &kp BSPC
&trans  &kp MINUS  &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                      &kp HOME  &trans         &kp END  &trans      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PIPE       &kp DEL
&trans  &kp UNDER  &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &ctrl_alt_delete              &kp PAGE_DOWN           &trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH  &trans
                              &trans                &trans                 &trans                                                        &kp PERIOD  &kp N0        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans                             &mmv MOVE_UP                     &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &kp BSPC
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &alt_f4                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &out OUT_TOG     &bt BT_CLR_ALL   &bt BT_NXT       &bt BT_SEL 1
                         &trans   &trans   &trans                                                              &mkp RCLK        &cut_copy        &kp LC(V)
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
