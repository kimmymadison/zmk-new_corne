#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        shiftcaps_sticky_td: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        parenth_td: parenth_td {
            compatible = "zmk,behavior-tap-dance";
            label = "PARENTH_TD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        cut_copy: cut_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "CUT_COPY";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
        };

        shiftlayer_td: shiftlayer_td {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTLAYER_TD";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&shiftlayer>;
        };

        quote_td: quote_td {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_TD";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp LS(APOS)>;
        };

        bt_encoder: bt_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BT_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        shiftlayer: shiftlayer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&sk LEFT_SHIFT>,
                <&macro_release>,
                <&sk LEFT_SHIFT>,
                <&macro_press>,
                <&sl 1>,
                <&macro_release>,
                <&sl 1>;

            label = "SHIFTLAYER";
        };
    };

    combos {
        compatible = "zmk,combos";

        df-esc {
            bindings = <&kp ESCAPE>;
            key-positions = <16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE    &kp Q  &kp W  &kp E      &kp R                 &kp T                            &kp UP                &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&kp TAB       &kp A  &kp S  &kp D      &lt 2 F               &kp G                  &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LEFT_ALT  &kp Z  &kp X  &kp C      &kp V                 &kp B  &kp LEFT_GUI              &kp DOWN              &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp DEL
                            &sk LCTRL  &shiftcaps_sticky_td  &sl 1                                                  &sl 1  &kp SPACE  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp LC(C_VOL_UP) C_VOL_DN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans     &kp LS(N1)    &kp LS(N2)  &kp LS(N3)  &kp LS(N4)      &kp LS(N5)                      &kp PG_UP               &kp LS(N6)  &kp LS(N7)       &kp LS(N8)  &kp LS(N9)  &kp LS(N0)     &kp BSPC
&trans     &kp NUMBER_1  &kp N2      &kp N3      &kp N4          &kp N5                &kp HOME  &trans         &kp END  &kp N6      &kp N7           &kp N8      &kp N9      &kp N0         &trans
&kp GRAVE  &kp TILDE     &kp PLUS    &kp LBKT    &kp LEFT_BRACE  &trans      &trans              &kp PAGE_DOWN           &trans      &kp RIGHT_BRACE  &kp RBKT    &kp PERIOD  &kp BACKSLASH  &kp PIPE
                                     &kp MINUS   &kp UNDER       &kp EQUAL                                               &trans      &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp F1  &kp F2           &kp F3           &kp F4           &kp F5           &kp F6                                     &mmv MOVE_UP                     &kp F7          &kp F8     &kp F9           &kp F10          &kp F11  &kp F12
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &trans           &rgb_ug RGB_SPI            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_AC_COPY   &mkp RCLK  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &trans   &trans
&trans  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans                    &mmv MOVE_DOWN                   &kp C_AC_PASTE  &mkp MB4   &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &trans   &trans
                                          &trans           &trans           &trans                                                                      &bt BT_CLR_ALL  &trans     &trans
            >;

            sensor-bindings = <&bt_encoder>;
        };

        layer_3 {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R      &kp T                       &kp UP_ARROW             &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F      &kp G             &kp LEFT  &trans        &kp RIGHT  &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B   &trans              &kp DOWN                 &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                         &kp LCTRL  &kp SPACE  &trans                                               &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &trans          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp BSPC
&kp TAB    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &trans  &trans  &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
